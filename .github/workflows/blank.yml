# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    #使用默认环境
    environment: default_env

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: 刷新缓存
        run: |
          curl -s https://purge.jsdelivr.net/gh/Viknopx/ruleNetwork@main/clash/rule/custom.yaml
          curl -s https://purge.jsdelivr.net/gh/Viknopx/ruleNetwork@main/clash/rule/customPxy.yaml
          curl -s https://purge.jsdelivr.net/gh/Viknopx/ruleNetwork@main/clash/providers/Pxy.yaml

      # Runs a set of commands using the runners shell
      - name: Clash合成
        run: |
          sed -i 's#SED_HK_PROXY_NAME#${{ vars.HK_PROXY_NAME }}#g' clash/proxy_temp.yaml
          sed -i 's#SED_HK_PROXY_SERVER#${{ secrets.HK_PROXY_SERVER }}#g' clash/proxy_temp.yaml
          sed -i 's#SED_HK_PROXY_NAME#${{ secrets.HK_PROXY_SECRETS }}#g' clash/proxy_temp.yaml

          cat clash/proxy_temp.yaml clash/config_rule.yaml > clash.yaml

          cat clash.yaml